We will now look at configuring inventory in Ansible.
Ansible can work with one
or multiple systems in your infrastructure at the same time.
In order to work with multiple servers
Ansible needs to establish connectivity to those servers.
This is done using SSH
for Linux and PowerShell Remoting for Windows.
That's what makes Ansible Agentless.

Agentless means that you don't need to install
any additional software
on the target machines to be able to work with Ansible.
A simple SSH connectivity would suffice Ansible's needs.
One of the major disadvantages
of most other orchestration tools is
that you are required to configure an agent
on the target systems
before you can invoke any kind of automation.
Now, information about these target systems is stored
in an inventory file.

If you don't create a new inventory file
Ansible uses the default inventory file located
at etc/Ansible/hosts location.

Let's take a look at a sample inventory file.
The inventory file is in an INI like format.
It's simply a number of servers listed, one after the other.
You can also group different servers together
by defining it like this under the name
of the group within square brackets, and define the list
of servers part of that group in the lines below.
You can have multiple groups defined
in a single inventory file.

Let's take a closer look at inventory files.
For example, I have a list
of servers named from one to four.
However, I would like to refer
to these servers in Ansible using an alias such
as web server or database server.
I could do this by adding an alias for each server
at the beginning of the line and assigning the address
of that server to Ansible underscore host parameter.
Ansible underscore host is an inventory parameter
used to specify the FQDN or IP address of a server.
There are other inventory parameters too.
Some of them are Ansible underscore connection
Ansible underscore port, Ansible underscore user
and Ansible underscore SSH underscore pass.
Ansible underscore connection is what defines how
Ansible connects to the target server.

Is this a SSH connection to a Linux server
or a WIN RM connection to a window server?

You could also set it to local host to indicate
that we would like to work with the local host
and not connect to any remote hosts.
If you don't have multiple servers to play around with
you could simply start with a local host
in your inventory file.
ansible_port defines which part to connect to.
By default, it is set to port 22 for
SSH, but if you need to change, you can set it
differently using Ansible underscore port parameter.

ansible_user defines the user used to
make remote connections. By default
this is set to root for Linux machines.
If you need to change this, define it as shown here.
ansible_SSH_pass defines
the SSH password for Linux.
Note that storing passwords in plain text format
like this may not be very ideal.
The best practice is to set
up SSH key based passwordless authentication
between the servers, and you should definitely do that
in your production or corporate environments.
To begin with, we'll start
with a really basic setup with a username and password.